{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Overview The Data Transfer Service (DTS) is a web service that handles requests for file transfers between participating organizations interested in exchanging biological and bioinformatical data. The DTS coordinates provides a single point of access for these organizations, allowing an end user or another service to search for datasets / files within any participating organization based on criteria specified in an ElasticSearch style query select any or all files from a search and request a transfer from the source organization to another participating organization DTS is designed for easy deployment and maintenance behind a gateway that provides TLS/SSL encryption. Requests to the DTS include headers with authentication information, so these requests rely on the HTTPS protocol to protect this information. It's very easy to deploy DTS in a Docker environment and configure it using environment variables.","title":"Home"},{"location":"index.html#overview","text":"The Data Transfer Service (DTS) is a web service that handles requests for file transfers between participating organizations interested in exchanging biological and bioinformatical data. The DTS coordinates provides a single point of access for these organizations, allowing an end user or another service to search for datasets / files within any participating organization based on criteria specified in an ElasticSearch style query select any or all files from a search and request a transfer from the source organization to another participating organization DTS is designed for easy deployment and maintenance behind a gateway that provides TLS/SSL encryption. Requests to the DTS include headers with authentication information, so these requests rely on the HTTPS protocol to protect this information. It's very easy to deploy DTS in a Docker environment and configure it using environment variables.","title":"Overview"},{"location":"admin/index.html","text":"DTS Administrator Guide DTS Installation DTS Configuration File Specification DTS Globus Endpoint Configuration More soon!","title":"Overview"},{"location":"admin/index.html#dts-administrator-guide","text":"DTS Installation DTS Configuration File Specification DTS Globus Endpoint Configuration More soon!","title":"DTS Administrator Guide"},{"location":"admin/config.html","text":"DTS Configuration File Specification You can configure a DTS instance by creating a YAML text file similar to dts.yaml.example in the repository. Typically this file is named dts.yaml , and is passed as an argument to the dts executable. Here we describe the different sections in this file and how they affect your DTS instance. Configuration File Sections Click on any of the links below to see the relevant details for a section. service : configure\u0455 settings for the DTS web service such as the port on which it listens, the maximum number of connections, intervals for polling and scrubbing completed tasks, data directories, and diagnostics endpoints : configures the endpoints used to transfer files from one place to another databases : configures databases for organizations that integrate with the DTS Each of these sections is described below, with a motivating example. service service : port : 8080 max_connections : 100 poll_interval : 60000 endpoint : globus-local data_dir : /path/to/dir delete_after : 604800 debug : true TODO: write some stuff! endpoints endpoints : globus-local : name : name-of-local-endpoint id : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx provider : globus auth : client_id : <ID of client with authentication secret> client_secret : <secret> globus-jdp : name : name-of-jdp-endpoint id : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx provider : globus auth : client_id : <ID of client with authentication secret> client_secret : <secret> globus-kbase : name : name-of-kbase-endpoint id : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx provider : globus auth : client_id : <ID of client with authentication secret> client_secret : <secret> TODO: Things and stuff databases databases : jdp : name : JGI Data Portal organization : Joint Genome Institute endpoint : globus-jdp kbase : name : KBase Workspace Service (KSS) organization : KBase endpoint : globus-kbase TODO: Alll the things","title":"Configuration"},{"location":"admin/config.html#dts-configuration-file-specification","text":"You can configure a DTS instance by creating a YAML text file similar to dts.yaml.example in the repository. Typically this file is named dts.yaml , and is passed as an argument to the dts executable. Here we describe the different sections in this file and how they affect your DTS instance.","title":"DTS Configuration File Specification"},{"location":"admin/config.html#configuration-file-sections","text":"Click on any of the links below to see the relevant details for a section. service : configure\u0455 settings for the DTS web service such as the port on which it listens, the maximum number of connections, intervals for polling and scrubbing completed tasks, data directories, and diagnostics endpoints : configures the endpoints used to transfer files from one place to another databases : configures databases for organizations that integrate with the DTS Each of these sections is described below, with a motivating example.","title":"Configuration File Sections"},{"location":"admin/config.html#service","text":"service : port : 8080 max_connections : 100 poll_interval : 60000 endpoint : globus-local data_dir : /path/to/dir delete_after : 604800 debug : true TODO: write some stuff!","title":"service"},{"location":"admin/config.html#endpoints","text":"endpoints : globus-local : name : name-of-local-endpoint id : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx provider : globus auth : client_id : <ID of client with authentication secret> client_secret : <secret> globus-jdp : name : name-of-jdp-endpoint id : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx provider : globus auth : client_id : <ID of client with authentication secret> client_secret : <secret> globus-kbase : name : name-of-kbase-endpoint id : xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx provider : globus auth : client_id : <ID of client with authentication secret> client_secret : <secret> TODO: Things and stuff","title":"endpoints"},{"location":"admin/config.html#databases","text":"databases : jdp : name : JGI Data Portal organization : Joint Genome Institute endpoint : globus-jdp kbase : name : KBase Workspace Service (KSS) organization : KBase endpoint : globus-kbase TODO: Alll the things","title":"databases"},{"location":"admin/globus.html","text":"DTS Globus Endpoint Configuration The Data Transfer System relies heavily on Globus for performing file transfers between different databases. Here we describe how to configure DTS to work with a Globus endpoint. 1. Obtain an Application/Service Credential for DTS 2. Create a Guest Collection on the Globus Endpoint 3. Grant DTS read/write access to the Guest Collection References Globus Docs: How To Use Application Credentials or Service Accounts to Automate Data Transfer","title":"Globus Endpoint Configuration"},{"location":"admin/globus.html#dts-globus-endpoint-configuration","text":"The Data Transfer System relies heavily on Globus for performing file transfers between different databases. Here we describe how to configure DTS to work with a Globus endpoint.","title":"DTS Globus Endpoint Configuration"},{"location":"admin/globus.html#1-obtain-an-applicationservice-credential-for-dts","text":"","title":"1. Obtain an Application/Service Credential for DTS"},{"location":"admin/globus.html#2-create-a-guest-collection-on-the-globus-endpoint","text":"","title":"2. Create a Guest Collection on the Globus Endpoint"},{"location":"admin/globus.html#3-grant-dts-readwrite-access-to-the-guest-collection","text":"","title":"3. Grant DTS read/write access to the Guest Collection"},{"location":"admin/globus.html#references","text":"Globus Docs: How To Use Application Credentials or Service Accounts to Automate Data Transfer","title":"References"},{"location":"admin/installation.html","text":"DTS Installation Here we describe how to build and deploy the Data Transfer System in an appropriate environment. Building and Testing DTS Locally DTS is written in Go , so you'll need a working Go compiler to build, test, and run it locally. If you have a Go compiler, you can clone this repository and build it from the top-level directory: go build Running Unit Tests DTS comes with several unit tests that demonstrate its capabilities, and you can run these tests as you would any other Go project: go test ./... You can add a -v flag to see output from the tests. Because DTS is primarily an orchestrator of network resources, its unit tests must be able to connect to and utilize these resources. Accordingly, you must set the following environment variables to make sure DTS can do what it needs to do: DTS_KBASE_DEV_TOKEN : a KBase development token (available to KBase developers used to connect to the KBase Auth Server, which provides a context for authenticating and authorizing DTS for its basic operations DTS_KBASE_TEST_ORCID : an ORCID identifier that can be used to run DTS's unit test. This identifier must match a registered ORCID ID associated with a KBase user account . DTS_KBASE_TEST_USER : the KBase user associated with the ORCID specified by DTS_KBASE_TEST_ORCID . DTS_GLOBUS_CLIENT_ID : a client ID registered using the Globus Developers web interface. This ID must be registered specifically for an instance of DTS. DTS_GLOBUS_CLIENT_SECRET : a client secret associated with the client ID specified by DTS_GLOBUS_CLIENT_ID DTS_GLOBUS_TEST_ENDPOINT : a Globus endpoint used to test DTS's transfer capabilities DTS_JDP_SECRET : a string containing a shared secret that allows the DTS to authenticate with the JGI Data Portal Deploying in a Docker Container TODO: More to come","title":"Installation"},{"location":"admin/installation.html#dts-installation","text":"Here we describe how to build and deploy the Data Transfer System in an appropriate environment.","title":"DTS Installation"},{"location":"admin/installation.html#building-and-testing-dts-locally","text":"DTS is written in Go , so you'll need a working Go compiler to build, test, and run it locally. If you have a Go compiler, you can clone this repository and build it from the top-level directory: go build","title":"Building and Testing DTS Locally"},{"location":"admin/installation.html#running-unit-tests","text":"DTS comes with several unit tests that demonstrate its capabilities, and you can run these tests as you would any other Go project: go test ./... You can add a -v flag to see output from the tests. Because DTS is primarily an orchestrator of network resources, its unit tests must be able to connect to and utilize these resources. Accordingly, you must set the following environment variables to make sure DTS can do what it needs to do: DTS_KBASE_DEV_TOKEN : a KBase development token (available to KBase developers used to connect to the KBase Auth Server, which provides a context for authenticating and authorizing DTS for its basic operations DTS_KBASE_TEST_ORCID : an ORCID identifier that can be used to run DTS's unit test. This identifier must match a registered ORCID ID associated with a KBase user account . DTS_KBASE_TEST_USER : the KBase user associated with the ORCID specified by DTS_KBASE_TEST_ORCID . DTS_GLOBUS_CLIENT_ID : a client ID registered using the Globus Developers web interface. This ID must be registered specifically for an instance of DTS. DTS_GLOBUS_CLIENT_SECRET : a client secret associated with the client ID specified by DTS_GLOBUS_CLIENT_ID DTS_GLOBUS_TEST_ENDPOINT : a Globus endpoint used to test DTS's transfer capabilities DTS_JDP_SECRET : a string containing a shared secret that allows the DTS to authenticate with the JGI Data Portal","title":"Running Unit Tests"},{"location":"admin/installation.html#deploying-in-a-docker-container","text":"TODO: More to come","title":"Deploying in a Docker Container"},{"location":"developer/index.html","text":"DTS Developer Guide More to come!","title":"Overview"},{"location":"developer/index.html#dts-developer-guide","text":"More to come!","title":"DTS Developer Guide"}]}