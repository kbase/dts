name: autotest_prs

on:
  push:
    branches: [ main, develop-format-action ]
  pull_request:
    branches: [ main ]

env:
  DTS_KBASE_DEV_TOKEN: ${{ secrets.DTS_KBASE_DEV_TOKEN }}
  DTS_KBASE_TEST_ORCID: ${{ secrets.DTS_KBASE_TEST_ORCID }}
  DTS_KBASE_TEST_USER: ${{ secrets.DTS_KBASE_TEST_USER }}
  DTS_GLOBUS_CLIENT_ID: ${{ secrets.DTS_GLOBUS_CLIENT_ID }}
  DTS_GLOBUS_CLIENT_SECRET: ${{ secrets.DTS_GLOBUS_CLIENT_SECRET }}
#  DTS_GLOBUS_TEST_ENDPOINT: ${{ secrets.DTS_GLOBUS_TEST_ENDPOINT }}
  DTS_JDP_SECRET: ${{ secrets.DTS_JDP_SECRET }}
  DTS_NMDC_USER: ${{ secrets.DTS_NMDC_USER }}
  DTS_NMDC_PASSWORD: ${{ secrets.DTS_NMDC_PASSWORD }}

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:

    - name: Setting up Go 1.21
      uses: actions/setup-go@v4
      with:
        go-version: ^1.21
      id: go

    - name: Checking out DTS
      uses: actions/checkout@v4

    - name: Vetting DTS
      run: go vet -v ./...

    - name: Static Analysis
      run: |
        go install honnef.co/go/tools/cmd/staticcheck@latest
        staticcheck ./...

    - name: Building DTS
      run: go build -v ./...

    - name: Testing DTS
      shell: bash
      run: |
        go test -v ./... -coverprofile=coverage.out -covermode=atomic
      continue-on-error: true # load coverage even if tests fail

    - name: Uploading code coverage report to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
