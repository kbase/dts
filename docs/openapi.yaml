openapi: "3.0.0"
info:
  title: dts
  description: |
    dts is a web service that orchestrates the transfer of genomics data
    between related repositories.
  termsOfService: "TBD"
  contact:
    name: Jeffrey N. Johnson
    email: jeff@cohere-llc.com
  license:
    name: MIT
    url: https://opensource.org/license/mit
  version: 1.0.0
servers:
  - url: http://dts.kbase.us
paths:
  /:
    get:
      summary: Retrieve API/service information
      description: Returns information about the DTS instance
      operationId: getRoot
      responses:
        200:
          description: Service API metadata
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceInfo"
              examples:
                get-root:
                  $ref: "#/components/examples/get-root"
        401:
          description: Client is not authorized to access DTS
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                get-root:
                  $ref: "#/components/examples/unauthorized-error"
        5XX:
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                internal-server-error:
                  $ref: "#/components/examples/internal-server-error"
  /api/v1/databases:
    get:
      summary: Query databases available to the DTS
      description: |
        Returns a list of metadata for available databases
      operationId: getQuery
      responses:
        200:
          description: An array of database metadata
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseResults"
              examples:
                databases:
                  $ref: "#/components/examples/databases"
        401:
          description: Client is not authorized to access DTS
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                get-root:
                  $ref: "#/components/examples/unauthorized-error"
        5XX:
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                internal-server-error:
                  $ref: "#/components/examples/internal-server-error"
  /api/v1/databases/{db}:
    get:
      summary: Request metadata for a specific database available to the DTS
      description: |
        Returns metadata for a specific database available to the DTS
      operationId: getQuery
      responses:
        200:
          description: A record containing specific database metadata
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseResult"
              examples:
                databases:
                  $ref: "#/components/examples/database"
        401:
          description: Client is not authorized to access DTS
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                get-root:
                  $ref: "#/components/examples/unauthorized-error"
        404:
          description: Specified database not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                internal-server-error:
                  $ref: "#/components/examples/internal-server-error"
  /api/v1/files:
    get:
      summary: Queries available files in a specific database
      description: |
        Returns a set of Frictionless DataResources describing results from
        the database query
      operationId: getQuery
      responses:
        200:
          description: An array of Frictionless DataResource results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ð…earchResults"
              examples:
                databases:
                  $ref: "#/components/examples/files"
        401:
          description: Client is not authorized to access DTS
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                get-root:
                  $ref: "#/components/examples/unauthorized-error"
        5XX:
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                internal-server-error:
                  $ref: "#/components/examples/internal-server-error"
  /api/v1/transfers:
    post:
      summary: Initiates a file transfer
      description: |
        Initiates a file transfer, returning a unique identifier that can be
        used to retrieve status information
      operationId: transfer
      requestBody:
        description: |
          A request body containing information identifying a set of files to
          be transferred, and their destination
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferRequest"
            examples:
              id-request:
                $ref: "#/components/examples/transfer-request"
      responses:
        200:
          description: |
            A unique ID that can be used to fetch status information for
            the file transfer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferId"
              examples:
                sequence-ids:
                  $ref: "#/components/examples/transfer-id"
        400:
          description: Improperly-formed request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        401:
          description: Client is not authorized to access DTS
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                get-root:
                  $ref: "#/components/examples/unauthorized-error"
        404:
          description: Source file(s) or destination not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                internal-server-error:
                  $ref: "#/components/examples/internal-server-error"
  /api/v1/transfers/{Id}:
    get:
      summary: Queries the status of a file transfer with the given ID
      description: |
        Queries the status of a file transfer with the given ID
      operationId: getQuery
      responses:
        200:
          description: An array of ElasticSearch results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferStatus"
              examples:
                databases:
                  $ref: "#/components/examples/transfer-status"
        400:
          description: Invalid transfer ID (poorly-formed UUID) or bad parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        401:
          description: Client is not authorized to access DTS
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                get-root:
                  $ref: "#/components/examples/unauthorized-error"
        404:
          description: Transfer ID not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                internal-server-error:
                  $ref: "#/components/examples/internal-server-error"
    delete:
      summary: Cancels the file transfer with the given ID
      description: |
        Cancels the previously initiated file transfer with the given ID
      operationId: deleteTransfer
      responses:
        202:
          description: |
            A response indicating that the cancellation request for the file
            transfer has been received but not enacted
        204:
          description: |
            A response indicating that the file transfer has been canceled
        400:
          description: Invalid Transfer ID (poorly-formed UUID) or bad parameter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        401:
          description: Client is not authorized to access DTS
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                get-root:
                  $ref: "#/components/examples/unauthorized-error"
        404:
          description: Transfer ID not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        5XX:
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                internal-server-error:
                  $ref: "#/components/examples/internal-server-error"

components:
  schemas:
    ServiceInfo:
      type: object
      description: Service/API metadata
      required:
        - name
        - version
        - uptime
      properties:
        name:
          type: string
          description: The name of the Service API
        version:
          type: string
          description: The version string (MAJOR.MINOR.PATCH)
        uptime:
          type: integer
          description: The uptime of the service (seconds)
        documentation:
          type: string
          description: |
            A URI to live OpenAPI documentation for the service. This is
            available only if the service's documentation endpoints were
            generated.
    Database:
      type: object
      description: A JSON object containing metadata describing a database
        available to the DTS
      required:
        - id
      properties:
        id:
          type: string
          description: A unique identifier for the database
        name:
          type: string
          description: A human-readable name for the database
        organization:
          type: string
          description: The name of the organization maintaining the database
    Databases:
      type: array
      description: An array of metadata for databases available to the DTS
      items:
        $ref: "#/components/schemas/Database"
    DataSource:
      type: object
      description: information about the source of a DataResource
      required:
        - title
      properties:
        title:
          type: string
          description: a descriptive title for the data source
        path:
          type: string
          description: a URI or relative path pointing to the source
        email:
          type: string
          description: >
            an email address identifying a contact associated with the source
    DataLicense:
      type: object
      description: information about a license associated with a DataResource
      required:
        - name
        - path
      properties:
        name:
          type: string
          description: the abbreviated name of the license
        path:
          type: string
          description: >
            a URI or relative path at which the license text may be retrieved
        title:
          type: string
          description: the descriptive title of the license
    DataResource:
      type: object
      description: >
        A Frictionless DataResource representing a file matching a search
      required:
        - id
        - name
        - path
        - format
        - bytes
        - hash
      properties:
        id:
          type: string
          description: a unique identifier for the resource
        name:
          type: string
          description: >
            the name of the resource's file, with any suffix stripped off
        path:
          type: string
          description: >
            a relative path to the file described by the resource, on the database's underlying filesystem
        title:
          type: string
          description: a title or label for the resource
        description:
          type: string
          description: An optional text description of the resource
        format:
          type: string
          description: >
            indicates the format of the resource's file, often used as an
            extension
        media_type:
          type: string
          description: the mediatype/mimetype of the resource (e.g. "test/csv")
        encoding:
          type: string
          description: >
            the character encoding for the resource's file (UTF-8 by default)
        bytes:
          type: number
          description: the size of the resource's file in bytes
        hash:
          type: string
          description: >
            the checksum used for the resource's file (algorithms other than
            MD5 are indicated with a prefix to the hash delimited by a colon)
        sources:
          type: array
          description: a list identifying the sources for this resource
          items:
            $ref: "#/components/schemas/DataSource"
        licenses:
          type: array
          description: >
            a list identifying the license or licenses under which this
            resource is managed
          items:
            $ref: "#/components/schemas/DataLicense"
        credit:
          type:
            $ref: "#/components/schemas/CreditMetadata"
          description: credit metadata associated with the resource
        metadata:
          type: object
          description: any unstructured metadata reported by the DTS
	Metadata json.RawMessage `json:"metadata,omitempty"`
    SearchResults:
      type: object
      description: a set of results for a file search query
      required:
        - database
        - query
        - resources
      properties:
        database:
          type: string
          description: the ID of the queried database
        query:
          type: string
          description: the query string passed to the database
        resources:
          type: array
          description: An array of Frictionless DataResource objects describing
            the results of the query
          items:
            $ref: "#/components/schemas/DataResource"
    Error:
      type: object
      description: An object containing information about an error
      required:
        - code
        - error
      properties:
        code:
          type: integer
          description: The HTTP status code associated with the error
        error:
          type: string
          description: A description of the error
    IdRequest:
      description: The body of a request for an ID mapping
      type: object
      required:
        - sourceDb
        - targetDb
        - ids
      properties:
        sourceDb:
          type: string
          description: |
            The identifier for the sequence database from which the sequence IDs
            are mapped
        targetDb:
          type: string
          description: |
            The identifier for the sequence database to which the sequence IDs
            are mapped
        ids:
          description: |
            An array of sequence IDs to be mapped from the source database to
            the target database
          $ref: "#/components/schemas/SequenceIds"
    SequenceId:
      type: string
      description: |
        A string that uniquely identifies a sequence within a database
    SequenceIds:
      type: array
      description: An array of sequence identifier strings
      items:
        $ref: "#/components/schemas/SequenceId"
    SequenceIdSets:
      type: array
      description: An array of arrays of sequence identifier strings
      items:
        $ref: "#/components/schemas/SequenceIds"
  examples:
    get-root:
      description: A response to a successful root query
      value: |
        name: "DTS prototype"
        version: "0.1"
        uptime: 345600
    database:
      description: A database
      value: |
        id: uniref100
        inÑ•titution: UniProt
        description: The Uniprot Uniref100 clusters
        lastUpdated: 2021-Jan-01
    databases:
      description: Information about available sequence databases
      value:
        - id: uniref100
          description: The Uniref 100% identity clusters
          institution: UniProt
          lastUpdated: 2021-Jan-1
        - id: ncbi_nr
          institution: NCBI
          description: The NCBI Non-redundant database
          lastUpdated: 2021-Jan-1
    id-request:
      description: A request to map IDs from a source to a target database
      value:
        sourceDb: ncbi_nr
        targetDb: uniref100
        ids:
        - "XP_002281555.2"
        - "XP_023920825.1"
        - "YOU WON'T FIND ME"
    internal-server-error:
      description: An internal server error
      value:
        code: 500
        message: Internal server error
    sequence-id:
      description: A unique identifier for a sequence
      value: VIOA_CHRV4
    sequence-ids:
      description: An array of unique sequence identifiers
      value:
        - "AA_S_1_contig_1_1"
        - "AA_S_1_contig_1_2"
    sequence-id-sets:
      description: An array of arrays of unique sequence identifiers
      value:
        - ["UniRef100_D7SMN4"]
        - ["UniRef100_UPI000CE18A79"]
        - []
